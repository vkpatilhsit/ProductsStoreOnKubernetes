name: 1-actions-ci-cd-aks

on:
  push:
    branches: [ main ]
    paths: .github/workflows/1-actions-ci-cd-aks.yml
  pull_request:
    branches:  none # [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build_Push-DOcker-Image:
    runs-on: ubuntu-latest
    env:
      DOCKER_REPOSITORY: ramgouda # name of Docker Hub ID
      IMAGE_NAME: myprivaterepo
      IMAGE_TAG: latest # ${{ github.run_number }} or $GITHUB_RUN_NUMBER
      
      CLUSTER_NAME: eshop-learn-aks
      RESOURSE_GROUP: eshop-learn-rg
    
    steps:

    - name: Git Checkout
      uses: actions/checkout@v2
  
    - name: Build Docker Image
      run:
        docker build ./MvcApp/ --file ./MvcApp/Dockerfile --tag $DOCKER_REPOSITORY/$IMAGE_NAME:${{ env.IMAGE_TAG }} --build-arg=token=ZGEzNTQ5Y2QyNjAx --no-cache

    #- name: Run Trivy vulnerability scanner
    #  uses: aquasecurity/trivy-action@master
    #  continue-on-error: true
    #  with:
    #    image-ref: 'docker.io/${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}'
    #    format: 'table'
    #    exit-code: '1'
    #    ignore-unfixed: true
    #    vuln-type: 'os,library'
    #    severity: 'MEDIUM,HIGH,CRITICAL'

    - name: Login to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_REPOSITORY_PASSWORD }}" | docker login -u $DOCKER_REPOSITORY --password-stdin
  
    - name: Push Image to Docker Hub
      run:
        docker push $DOCKER_REPOSITORY/$IMAGE_NAME:${{ env.IMAGE_TAG }}
   
    - uses: cschleiden/replace-tokens@v1
      with:
        files: '["kubernetes/*.yaml"]'
        tokenPrefix: __ # optional, default is #{
        tokenSuffix: __ # optional, default is }#
      env:
        DOCKER_REPOSITORY: ${{ env.DOCKER_REPOSITORY }}
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
        IMAGE_TAG: ${{ env.IMAGE_TAG }}

  Deploy-to-Dev-Env:
    needs: build_Push-DOcker-Image
    runs-on: ubuntu-latest
    env:
            
      CLUSTER_NAME: eshop-learn-aks
      RESOURSE_GROUP: eshop-learn-rg

    steps:
    
    - name: Git Checkout
      uses: actions/checkout@v2
      
    # Set the target AKS cluster.
    - uses: Azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.RESOURSE_GROUP }}

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f kubernetes/mvc-deployment.azure.yaml
        kubectl apply -f kubernetes/mssql-deployment.yaml
    
    - name: Run Kube-Bench to check cluster config
      continue-on-error: true
      run: |
        kubectl apply -f https://raw.githubusercontent.com/aquasecurity/kube-bench/main/job-aks.yaml
        sleep 30s
        kubectl logs job.batch/kube-bench
        kubectl delete job.batch/kube-bench
  Deploy-to-QA-Env:
    needs: Deploy-to-Dev-Env
    runs-on: ubuntu-latest
    env:
            
      CLUSTER_NAME: eshop-learn-aks
      RESOURSE_GROUP: eshop-learn-rg

    steps:
    
    - name: Git Checkout
      uses: actions/checkout@v2
      
    # Set the target AKS cluster.
    - uses: Azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.RESOURSE_GROUP }}

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f kubernetes/mvc-deployment.azure.yaml
        kubectl apply -f kubernetes/mssql-deployment.yaml
    
    - name: Run Kube-Bench to check cluster config
      continue-on-error: true
      run: |
        kubectl apply -f https://raw.githubusercontent.com/aquasecurity/kube-bench/main/job-aks.yaml
        sleep 30s
        kubectl logs job.batch/kube-bench
        kubectl delete job.batch/kube-bench   
  Deploy-to-Prod-Env:
    needs: Deploy-to-QA-Env
    runs-on: ubuntu-latest
    env:
            
      CLUSTER_NAME: eshop-learn-aks
      RESOURSE_GROUP: eshop-learn-rg

    steps:
    
    - name: Git Checkout
      uses: actions/checkout@v2
      
    # Set the target AKS cluster.
    - uses: Azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.RESOURSE_GROUP }}

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f kubernetes/mvc-deployment.azure.yaml
        kubectl apply -f kubernetes/mssql-deployment.yaml
    
    - name: Run Kube-Bench to check cluster config
      continue-on-error: true
      run: |
        kubectl apply -f https://raw.githubusercontent.com/aquasecurity/kube-bench/main/job-aks.yaml
        sleep 30s
        kubectl logs job.batch/kube-bench
        kubectl delete job.batch/kube-bench      
